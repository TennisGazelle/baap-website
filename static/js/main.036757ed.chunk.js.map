{"version":3,"sources":["imgs/pipeline.png","imgs/blender_logo.svg","imgs/tennisgazelle_logo.png","components/RoundButton.jsx","components/LandingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","ButtonWrapper","styled","div","_templateObject","_taggedTemplateLiteral","Button","button","_templateObject2","ButtonHolder","_templateObject3","getStyleFromProps","props","style","backgroundColor","color","fontColor","disabled","_objectSpread","backgroundImage","RoundButton","_Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","React","createElement","children","Component","ImgContainer","PipelineImage","img","SubImgContainer","BlenderImage","_templateObject4","TGImage","_templateObject5","ContentHolder","_templateObject6","TitleHolder","_templateObject7","LandingPage","justifyContent","minHeight","src","pipeline_logo","alt","href","links","blender_home","target","rel","blender_logo","tennisgazelle_home","tennisgazelle_logo","github","latest_release","main","donation","maxWidth","textDecoration","wiki","App","className","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.036757ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pipeline.0f367020.png\";","module.exports = __webpack_public_path__ + \"static/media/blender_logo.a065499d.svg\";","module.exports = __webpack_public_path__ + \"static/media/tennisgazelle_logo.c8585c29.png\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components'\n\nconst ButtonWrapper = styled.div`\n    padding:10px;\n`\n\nconst Button = styled.button`\n    height:  40px;\n    width:   135px;\n    border-radius: 20px;\n    border: none;\n    box-shadow: 7px 7px 5px rgba(0, 0, 0, 0.25);\n    transition: transform, 0.5s;\n    transition: box-shadow, 0.5s;\n    font-family: 'Avenir', Helvetica, sans-serif;\n\n    &:hover {\n        position: relative;\n        box-shadow: 10px 10px 5px rgba(0, 0, 0, 0.15);\n        transform: translate(-3px, -3px);\n    }\n`\n\nconst ButtonHolder = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    justify-content: center;\n`\n\nconst getStyleFromProps = (props) => {\n    var style = {\n        backgroundColor: props.color,\n        color: props.fontColor || 'white'\n    }\n\n    if (props.disabled) {\n        style = {\n            ...style,\n            backgroundImage: 'repeating-linear-gradient(45deg, ' + props.color + ' 0 10px, grey 10px 20px)',\n            disabled: true,\n            color: 'white'\n            // \"&:hover\": {} // todo figure out how to make this configurable for disabled\n        }\n    }\n\n    return style;\n}\n\nclass RoundButton extends Component {\n\n    render() {\n        return <ButtonWrapper>\n            <Button style={getStyleFromProps(this.props)}>\n                {this.props.children}\n            </Button>\n        </ButtonWrapper>\n        \n    }\n}\n\nRoundButton.propTypes = {\n    color: PropTypes.string.isRequired,\n    disabled: PropTypes.bool\n};\n\nexport default RoundButton;\n\nexport {\n    ButtonHolder\n};","import React, { Component } from 'react';\nimport pipeline_logo from '../imgs/pipeline.png'\nimport blender_logo from '../imgs/blender_logo.svg';\nimport tennisgazelle_logo from '../imgs/tennisgazelle_logo.png';\nimport styled from 'styled-components'\nimport RoundButton, { ButtonHolder } from './RoundButton'\nimport links from './Links.json'\n\nconst ImgContainer = styled.div`\n    position: relative;\n    max-width: 550px;\n    min-width: 450px;\n    height: 225px;\n    // border-style: solid;\n    // border-color: green;\n`;\n\nconst PipelineImage = styled.img`\n    position: absolute;\n    display: block;\n    width: 100%;\n    height: auto;\n    z-index: 1;\n`;\n\nconst SubImgContainer = styled.div`\n    position: absolute;\n    width: 225px;\n    height: 190px;\n\n    left: 25%;\n    top: 5%;\n    align-items: center;\n    // border-style: solid;\n    // border-color: red;\n`;\n\nconst BlenderImage = styled.img`\n    position: absolute;\n    left: 0;\n    display: block;\n\n    width: 100%;\n    height: auto;\n\n    z-index: 2;\n    filter: drop-shadow(7px 7px 5px rgba(0, 0, 0, 0.25));\n\n    transition: transform, 0.5s;\n    transition: filter, 0.5s;\n    &:hover {\n        position: relative;\n        filter: drop-shadow(10px 10px 5px rgba(0, 0, 0, 0.15));\n        transform: translate(-3px, -3px);\n    }\n`;\n\nconst TGImage = styled.img`\n    position: absolute;\n    display; block;\n    bottom: 0;\n    right: 0;\n    width: 20%;\n    z-index: 3;\n`;\n\nconst ContentHolder = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-wrap: wrap;\n`\n\nconst TitleHolder = styled.div`\n    min-width: 450px;\n    height: auto;\n    // border-style: solid;\n    // border-color: red;\n    vertical-align: middle;\n    justify-content: center;\n`\n\nexport const LandingPage = () => {\n    return <div>\n        <ButtonHolder style={{ justifyContent:'flex-end', minHeight: '40px'}}>\n            {/* <RoundButton style={{ order: 1 }} color=\"orange\" onClick={() => {console.log('clicked orange')}}>LOG IN</RoundButton>\n            <RoundButton style={{ order: 2 }} color=\"red\" onClick={() => {console.log('clicked red')}}>SIGN UP</RoundButton> */}\n        </ButtonHolder>\n\n        <br/>\n\n    <ContentHolder>\n        <ImgContainer>\n            <PipelineImage src={pipeline_logo} alt=\"Background Image of Pipeline\" />\n            <SubImgContainer>\n                <a href={links.blender_home} target=\"_blank\" rel=\"noreferrer\">\n                    <BlenderImage src={blender_logo} alt=\"Blender Logo\"/>\n                </a>\n                <a href={links.tennisgazelle_home} target=\"_blank\" rel=\"noreferrer\">\n                    <TGImage src={tennisgazelle_logo} alt=\"Website Author Logo\" />\n                </a>\n            </SubImgContainer>\n        </ImgContainer>\n        <TitleHolder>\n            <h1>BAAP</h1>\n            <h2>Blender as a Pipeline</h2>\n            <ButtonHolder >\n                <RoundButton color=\"BLACK\" disabled>ONBOARD</RoundButton>\n                <a href={links.github.latest_release}>\n                    <RoundButton color=\"GREY\" >DOWNLOAD</RoundButton>\n                </a>\n                <a href={links.github.main} target=\"_blank\" rel=\"noreferrer\">\n                    <RoundButton color=\"GREY\">SOURCE</RoundButton>\n                </a>\n                <a href={links.donation} target=\"_blank\" rel=\"noreferrer\">\n                    <RoundButton color=\"GOLD\" fontColor=\"BLACK\">DONATE</RoundButton>\n                </a>\n            </ButtonHolder>\n        </TitleHolder>\n\n        <TitleHolder>\n            <h3 style={{ maxWidth: '500px' }}>This project is back in active development, consider donating.  For more information on this project, and to see if it's a right fit for yourself or your small studio, visit <a style={{'textDecoration': 'none'}} href={links.github.wiki}>the wiki.</a></h3>\n            <p style={{ maxWidth: '500px', justifyContent: 'center' }}>\n                Blender Pipeline: a community-driven set of tools & workflows for 3D artists to create high-quality assets for game engines & real-time apps. Custom scene settings, optimized mesh generation, UV mapping, & texture baking included.\n            </p>\n        </TitleHolder>\n    </ContentHolder>\n    </div>\n}\n\n// style={{borderStyle: 'solid', borderColor: 'green'}}\n// export default LandingPage;","import React from 'react';\nimport './App.css';\nimport { LandingPage } from './components/LandingPage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LandingPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}